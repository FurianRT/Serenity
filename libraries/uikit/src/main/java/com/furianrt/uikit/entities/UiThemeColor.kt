package com.furianrt.uikit.entities

import androidx.compose.material3.ColorScheme
import androidx.compose.ui.graphics.Color
import com.furianrt.uikit.theme.Colors
import com.furianrt.uikit.theme.defaultColorScheme

enum class UiThemeColor(
    val id: String,
    val surface: Color,
    val primaryContainer: Color,
    val primary: Color = Color.White,
    val onPrimary: Color = Color.White,
    val secondary: Color = Color.White,
    val onSecondary: Color = Color.White,
    val onBackground: Color = Color.White,
    val secondaryContainer: Color = Color.White.copy(alpha = 0.05f),
    val inverseSurface: Color = Color.White.copy(alpha = 0.05f),
    val onSurface: Color = Color.White,
    val onPrimaryContainer: Color = Color.White,
    val surfaceContainer: Color = Color.White,
    val onSurfaceVariant: Color = primaryContainer.copy(alpha = 0.2f),
    val outlineVariant: Color = Color.White.copy(alpha = 0.05f),
    val background: Color = Color.White.copy(alpha = 0.1f),
    val tertiary: Color = Color.White.copy(alpha = 0.1f),
    val onTertiary: Color = Color.White,
    val tertiaryContainer: Color = Color.White.copy(alpha = 0.2f),
    val onTertiaryContainer: Color = Color.White.copy(alpha = 0.3f),
    val errorContainer: Color = Color(0xFFF2402F),
    val onErrorContainer: Color = Color.White,
    val scrim: Color = Color.Black.copy(alpha = 0.5f),
    val surfaceTint: Color = surface.copy(alpha = 0.3f),
    val surfaceDim: Color = Color.Black.copy(alpha = 0.1f),
    val surfaceContainerLow: Color = primary.copy(alpha = 0.5f),
    val isLight: Boolean = false,
) {
    SCANDI_GRANDPA_GRAY_DARK(
        id = "1",
        surface = Colors.Primary.ScandiGrandpaGrayDark,
        primaryContainer = Colors.Accent.Turquoise,
    ),

    VAMPIRE_RED_DARK(
        id = "2",
        surface = Colors.Primary.VampireRedDark,
        primaryContainer = Colors.Accent.PlumWine,
    ),

    EUPHORIA_BLUE_DARK(
        id = "3",
        surface = Colors.Primary.EuphoriaBlueDark,
        primaryContainer = Colors.Accent.Blue,
    ),
    EUPHORIA_VIOLET(
        id = "4",
        surface = Colors.Primary.EuphoriaViolet,
        primaryContainer = Colors.Accent.Purple2,
    ),
    EUPHORIA_BLUE(
        id = "5",
        surface = Colors.Primary.EuphoriaBlue,
        primaryContainer = Colors.Accent.Blue2,
    ),
    EUPHORIA_PINK(
        id = "6",
        surface = Colors.Primary.EuphoriaPink,
        primaryContainer = Colors.Accent.RichMulberry,
    ),

    IRIS_RED(
        id = "7",
        surface = Colors.Primary.IrisRed,
        primaryContainer = Colors.Accent.RedDark,
    ),
    IRIS_RED_DARK(
        id = "8",
        surface = Colors.Primary.IrisRedDark,
        primaryContainer = Colors.Accent.Pink3,
    ),

    STORM_IN_THE_NIGHT_BLUE(
        id = "9",
        surface = Colors.Primary.StormInTheNightBlue,
        primaryContainer = Colors.Accent.PurpleDark,
    ),
    STORM_IN_THE_NIGHT_BLUE_LIGHT(
        id = "10",
        surface = Colors.Primary.StormInTheNightBlueLight,
        primaryContainer = Colors.Accent.Purple,
    ),

    UNICORN_2012_BLUE(
        id = "11",
        surface = Colors.Primary.Unicorn2012Blue,
        primaryContainer = Colors.Accent.Blue3,
        surfaceDim = Color.DarkGray.copy(alpha = 0.15f),
    ),
    UNICORN_2012_PINK_DARK(
        id = "12",
        surface = Colors.Primary.Unicorn2012PinkDark,
        primaryContainer = Colors.Accent.Pink,
        surfaceDim = Color.DarkGray.copy(alpha = 0.1f),
    ),

    DISTANT_CASTLE_GREEN(
        id = "13",
        surface = Colors.Primary.DistantCastleGreen,
        primaryContainer = Colors.Accent.GreenLight,
    ),
    DISTANT_CASTLE_BLUE(
        id = "14",
        surface = Colors.Primary.DistantCastleBlue,
        primaryContainer = Colors.Accent.Purple,
        surfaceDim = Color.Black.copy(alpha = 0.2f),
    ),


    LIGHT_BLUE(
        id = "15",
        primary = Color.Black,
        onPrimary = Color.Black,
        secondary = Color.Black,
        onSecondary = Color.Black,
        onBackground = Color.Black,
        onSurface = Color.Black,
        onPrimaryContainer = Color.White,
        tertiary = Colors.Accent.LightBlue.copy(alpha = 0.1f),
        outlineVariant = Colors.Accent.LightBlue.copy(alpha = 0.1f),
        onTertiary = Color.Black,
        tertiaryContainer = Colors.Accent.LightBlue.copy(alpha = 0.15f),
        onTertiaryContainer = Colors.Accent.LightBlue.copy(alpha = 0.2f),
        background = Color.White.copy(alpha = 0.3f),
        secondaryContainer = Color.White.copy(alpha = 0.3f),
        inverseSurface = Color.White.copy(alpha = 0.2f),
        onSurfaceVariant = Colors.Accent.LightBlue.copy(alpha = 0.1f),
        surface = Colors.Primary.LightBlue,
        surfaceContainer = Colors.Accent.LightBlue,
        primaryContainer = Colors.Accent.LightBlue,
        surfaceDim = Color.DarkGray.copy(alpha = 0.1f),
        scrim = Color.Black.copy(alpha = 0.35f),
        surfaceContainerLow = Color.Black.copy(alpha = 0.3f),
        isLight = true,
    ),

    GREEN_LIGHT(
        id = "16",
        primary = Color.Black,
        onPrimary = Color.Black,
        secondary = Color.Black,
        onSecondary = Color.Black,
        onBackground = Color.Black,
        onSurface = Color.Black,
        onPrimaryContainer = Color.White,
        tertiary = Colors.Accent.LightGreen.copy(alpha = 0.1f),
        outlineVariant = Colors.Accent.LightGreen.copy(alpha = 0.1f),
        onTertiary = Color.Black,
        tertiaryContainer = Colors.Accent.LightGreen.copy(alpha = 0.15f),
        onTertiaryContainer = Colors.Accent.LightGreen.copy(alpha = 0.2f),
        background = Color.White.copy(alpha = 0.3f),
        secondaryContainer = Color.White.copy(alpha = 0.3f),
        inverseSurface = Color.White.copy(alpha = 0.3f),
        onSurfaceVariant = Colors.Accent.LightGreen.copy(alpha = 0.1f),
        surface = Colors.Primary.LightGreen,
        surfaceContainer = Colors.Accent.LightGreen,
        primaryContainer = Colors.Accent.LightGreen,
        surfaceDim = Color.DarkGray.copy(alpha = 0.1f),
        scrim = Color.Black.copy(alpha = 0.35f),
        surfaceContainerLow = Color.Black.copy(alpha = 0.3f),
        isLight = true,
    ),

    PINK_LIGHT(
        id = "17",
        primary = Color.Black,
        onPrimary = Color.Black,
        secondary = Color.Black,
        onSecondary = Color.Black,
        onBackground = Color.Black,
        onSurface = Color.Black,
        onPrimaryContainer = Color.White,
        tertiary = Colors.Accent.LightPink.copy(alpha = 0.15f),
        outlineVariant = Colors.Accent.LightPink.copy(alpha = 0.15f),
        onTertiary = Color.Black,
        tertiaryContainer = Colors.Accent.LightPink.copy(alpha = 0.2f),
        onTertiaryContainer = Colors.Accent.LightPink.copy(alpha = 0.25f),
        background = Color.White.copy(alpha = 0.25f),
        secondaryContainer = Color.White.copy(alpha = 0.35f),
        inverseSurface = Color.White.copy(alpha = 0.25f),
        onSurfaceVariant = Colors.Accent.LightPink.copy(alpha = 0.1f),
        surface = Colors.Primary.LightPink,
        surfaceContainer = Colors.Accent.LightPink,
        primaryContainer = Colors.Accent.LightPink,
        surfaceDim = Color.DarkGray.copy(alpha = 0.1f),
        scrim = Color.Black.copy(alpha = 0.35f),
        surfaceContainerLow = Color.Black.copy(alpha = 0.3f),
        isLight = true,
    ),

    PURPLE_LIGHT(
        id = "18",
        primary = Color.Black,
        onPrimary = Color.Black,
        secondary = Color.Black,
        onSecondary = Color.Black,
        onBackground = Color.Black,
        onSurface = Color.Black,
        onPrimaryContainer = Color.White,
        tertiary = Colors.Accent.LightPurple.copy(alpha = 0.15f),
        outlineVariant = Colors.Accent.LightPurple.copy(alpha = 0.2f),
        onTertiary = Color.Black,
        tertiaryContainer = Colors.Accent.LightPurple.copy(alpha = 0.2f),
        onTertiaryContainer = Colors.Accent.LightPurple.copy(alpha = 0.2f),
        background = Color.White.copy(alpha = 0.25f),
        secondaryContainer = Color.White.copy(alpha = 0.35f),
        inverseSurface = Color.White.copy(alpha = 0.25f),
        onSurfaceVariant = Colors.Accent.LightPurple.copy(alpha = 0.1f),
        surface = Colors.Primary.LightPurple,
        surfaceContainer = Colors.Accent.LightPurple,
        primaryContainer = Colors.Accent.LightPurple,
        surfaceDim = Color.DarkGray.copy(alpha = 0.07f),
        scrim = Color.Black.copy(alpha = 0.35f),
        surfaceContainerLow = Color.Black.copy(alpha = 0.3f),
        isLight = true,
    ),

    ORANGE_LIGHT(
        id = "19",
        primary = Color.Black,
        onPrimary = Color.Black,
        secondary = Color.Black,
        onSecondary = Color.Black,
        onBackground = Color.Black,
        onSurface = Color.Black,
        onPrimaryContainer = Color.White,
        tertiary = Colors.Accent.LightOrange.copy(alpha = 0.15f),
        outlineVariant = Colors.Accent.LightOrange.copy(alpha = 0.2f),
        onTertiary = Color.Black,
        tertiaryContainer = Colors.Accent.LightOrange.copy(alpha = 0.2f),
        onTertiaryContainer = Colors.Accent.LightOrange.copy(alpha = 0.2f),
        background = Color.White.copy(alpha = 0.2f),
        secondaryContainer = Color.White.copy(alpha = 0.25f),
        inverseSurface = Color.White.copy(alpha = 0.2f),
        onSurfaceVariant = Colors.Accent.LightOrange.copy(alpha = 0.1f),
        surface = Colors.Primary.LightOrange,
        surfaceContainer = Colors.Accent.LightOrange,
        primaryContainer = Colors.Accent.LightOrange,
        surfaceDim = Color.DarkGray.copy(alpha = 0.07f),
        scrim = Color.Black.copy(alpha = 0.35f),
        surfaceContainerLow = Color.Black.copy(alpha = 0.3f),
        isLight = true,
    );

    companion object {
        fun fromId(id: String?) = entries.find { it.id == id } ?: STORM_IN_THE_NIGHT_BLUE_LIGHT
    }
}

val UiThemeColor.colorScheme: ColorScheme
    get() = defaultColorScheme.copy(
        primary = primary,
        onPrimary = onPrimary,
        secondary = secondary,
        onSecondary = onSecondary,
        onBackground = onBackground,
        inverseSurface = inverseSurface,
        onSurface = onSurface,
        onSurfaceVariant = onSurfaceVariant,
        surfaceContainer = surfaceContainer,
        onPrimaryContainer = onPrimaryContainer,
        outlineVariant = outlineVariant,
        secondaryContainer = secondaryContainer,
        tertiary = tertiary,
        onTertiary = onTertiary,
        tertiaryContainer = tertiaryContainer,
        onTertiaryContainer = onTertiaryContainer,
        errorContainer = errorContainer,
        onErrorContainer = onErrorContainer,
        scrim = scrim,
        background = background,
        surface = surface,
        primaryContainer = primaryContainer,
        surfaceTint = surfaceTint,
        surfaceDim = surfaceDim,
        surfaceContainerLow = surfaceContainerLow,
    )
